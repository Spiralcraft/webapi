<dt:Session
  xmlns:t="class:/spiralcraft/task/"
  xmlns:dt="class:/spiralcraft/data/task/"
  xmlns:j="class:/java/lang/"
  xmlns:sa="class:/spiralcraft/servlet/auth/"
  xmlns:sec="class:/spiralcraft/security/"
  xmlns:seca="class:/spiralcraft/security/auth/"
  xmlns:util="class:/spiralcraft/util/"
  xmlns:wapi="class:/spiralcraft/webapi/"
  xmlns:swm="class:/spiralcraft/webapp/meta/"
  >
  <contextX>
    [#p]
    { userId:[@j:String]
    }
  </contextX>
  <transactional>true
  </transactional>
  <resultReflectorX>[@j:Boolean]
  </resultReflectorX>
  <addChainResult>true
  </addChainResult>
  <sequence>
    <t:Eval>
      <x>
        [#reg] 
        {
          login:=[@sec:Login].@register
            ([seca:Authenticator].digestFunction
            ,"extapi-"+[wapi:Session].subscriptionId+"-"+[p].userId
            ,[@util:RandomUtil].@generateString(16)
            )
          ,user:=
            [*dt:Edit
              {[@swm:User].type
              ,forceSave:=true
              ,preSave:=`
                @{ .commonName=[reg].login.username
                  ,.principalName=.commonName
                  ,.principalId=[reg].login.principalId
                }
                `
              }
            ].()
          ,authToken:=
            [*dt:Edit
              {[@sa:AuthToken].type
              ,forceSave:=true
              ,preSave:=`
                @{ .token=[p].userId
                  ,.systemId=[wapi:Session].subscriptionId
                  ,.extId=[p].userId
                  ,.principalId=[reg].login.principalId
                }
                `
              }
            ].()
          }.user!=null
      </x>
    
    </t:Eval>
    
  </sequence>
</dt:Session>